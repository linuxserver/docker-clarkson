---

# project information
project_name: clarkson
project_url: "https://github.com/linuxserver/Clarkson"
project_logo: "https://raw.githubusercontent.com/linuxserver/Clarkson/master/docs/dashboard.png"
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a web-based dashboard application that gives you a neat and clean interface for logging your fuel fill-ups for all of your vehicles. The application has full multi-user support, as well as multiple vehicles per user. Whenever you fill-up your car or motorcycle, keep the receipt and record the data in Clarkson."
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "MYSQL_HOST", env_value: "<mysql_host>", desc: "Points the backend to the MySQL database. This can be either a docker hostname or an IP." }
  - { env_var: "MYSQL_USERNAME", env_value: "<mysql_username>", desc: "The user with access to the _clarkson_ schema." }
  - { env_var: "MYSQL_PASSWORD", env_value: "<mysql_password>", desc: "The password for the user." }
  - { env_var: "ENABLE_REGISTRATIONS", env_value: "<true|false>", desc: "**Defaults to _false_**. If set to _true_, allows new users to register." }
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: false
param_usage_include_ports: true
param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "WebUI" }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: false
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  **Please ensure MySQL is running before starting this container**.

  It is preferred if you create the `clarkson` schema before initially running the container, then creating a user with granted permissions for the schema. Creating the schema before running the app is important as the "clarkson" user will not have permission to create the schema on your behalf. You can, of course, use the "root" user, which has the ability to create schemas automatically, but this is not recommended.

  ```sql
  CREATE SCHEMA `clarkson`;
  CREATE USER 'clarkson_user' IDENTIFIED BY 'supersecretpassword';
  GRANT ALL ON `clarkson`.* TO 'clarkson_user';
  ```

  Once running, the container will run an initial MySQL migration, which populates the schema with all tables and procedures. The application will start immediately afterwards. You will need to register an initial user, of which will be the admin of the application. All subsequent users will be standard users. You can disable registrations after the fact by recreating the container with the `ENABLE_REGISTRATIONS` flag set to `false`. This will not hide the "Register" link, but will disable the functionality.

# changelog
changelogs:
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "23.03.19:", desc: "Updating runtime dependancies for the JRE." }
  - { date: "22.02.19:", desc: "Rebasing to alpine 3.9." }
  - { date: "11.02.19:", desc: "Add pipeline logic and multi arch." }
  - { date: "22.08.18:", desc: "Rebase to alpine linux 3.8." }
  - { date: "19.02.18:", desc: "Initial Release." }
